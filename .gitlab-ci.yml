image: golang:1.13

.test_long_template: &test_long_def
  stage: test-long
  only:
    - schedules
  after_script:
    - mkdir $CI_PROJECT_DIR/logs
    - find /tmp/ais -type f -name "*log*" -exec cp {} $CI_PROJECT_DIR/logs/ \;
  artifacts:
    when: on_failure
    paths: [logs/]
    expire_in: 2 days

.aws_cli_install: &aws_cli
  - pip3 install awscli --upgrade --user

variables:
  GOPATH: /go
  AISNODE_FLAGS: "-skipstartup"

before_script:
  - export PATH="$PATH:$GOPATH/bin"
  - apt-get update -yq
  - apt-get --no-install-recommends -y install curl git sysstat attr build-essential lsof fuse python3-pip python3-setuptools

stages:
  - build
  - test-short
  - test-long

build:linux:
  stage: build
  script:
    - CLDPROVIDER="aws" make node
    - CLDPROVIDER="gcp" make node
    - CLDPROVIDER="ais" make node
    - CLDPROVIDER="azure" make node
    - CLDPROVIDER="" make node
    - make authn
    - make aisfs
    - make cli
    - make aisloader

lint:linux:
  stage: build
  script:
    - pip3 install yapf pylint
    - make lint
    - make fmt-check
    - make spell-check

test:short:
  stage: test-short
  script:
    - *aws_cli
    - make aisfs cli
    - make deploy <<< $'5\n5\n3\n0'
    - DEPLOY_AS_NEXT_TIER="true" make deploy <<< $'1\n1\n3\n0'
    - sleep 3
    - ais attach remote alias=http://127.0.0.1:11080 # attach to remote cluster
    - BUCKET="test" make test-short

test:long:
  <<: *test_long_def
  script:
    - *aws_cli
    - make deploy <<< $'6\n5\n3\n0'
    - BUCKET="test" make test-long

test:cloud:
  <<: *test_long_def
  variables:
    AWS_REGION: us-west-2
  script:
    - make deploy <<< $'6\n5\n3\n1'
    - BUCKET="ci-aistore" make test-long

test:soak:
  stage: test-long
  only:
    - schedules
  script:
    - make deploy <<< $'5\n5\n3\n0'
    - FLAGS="--short --rec-cycles=1" make test-soak
