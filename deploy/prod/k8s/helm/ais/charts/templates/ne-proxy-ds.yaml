apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "ais.fullname" . }}-ne-proxy
  labels:
    app: {{ template "ais.name" . }}
    chart: {{ template "ais.chart" . }}
    component: "{{ .Values.ne_proxy.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      release: {{ .Release.Name }}
  # RollingUpdate won't work for DFC Proxy because as soon as a master is killed one of the remaining proxies will
  # try to become a master, so we have to kill them all and relaunch them
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "ais.name" . }}
        component: "{{ .Values.ne_proxy.name }}"
        release: {{ .Release.Name }}
        gw: "{{ .Values.ne_proxy.gw_label }}"
    spec:
      initContainers:
        - name: populate-env
          image: {{ .Values.image.kubectl.repository }}:{{ .Values.image.kubectl.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MY_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - "/bin/bash"
          args: [ "-c", "/bin/bash /var/ais_config/set_uuid_env.sh" ]
          volumeMounts:
            - name: config-mount
              mountPath: "/var/ais_config"
            - name: env-mount
              mountPath: "{{ .Values.ne_proxy.envMountPath.podPath }}"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.aisnode.repository }}:{{ .Values.image.aisnode.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            capabilities:
              add:
                {{ range .Values.ais_k8s.container_capabilities }}
                - {{ . }}
                {{ end }}
          env:
            - name : CONFFILE
              value : "/var/ais_config/ais.json"
            - name: STATSDCONF
              value: "/var/statsd_config/statsd.json"
            - name : ROLE
              value : "proxy"
            - name : TARGETS
              value : "0"
            - name: AIS_HOSTIP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: PRIMARY_PROXY_SERVICE_HOSTNAME
              value: {{ template "ais.fullname" . }}-initial-primary-proxy
          ports:
            - name: http
              containerPort: {{ .Values.ne_proxy.service.port }}
              protocol: TCP
          volumeMounts:
            - name: config-mount
              mountPath: "/var/ais_config"
            - name: env-mount
              mountPath: "{{ .Values.ne_proxy.envMountPath.podPath }}"
            - name: etc-mount
              mountPath: "{{ .Values.ais_config_common.confdir }}"
            - name: statsd-config
              mountPath: "/var/statsd_config"
          livenessProbe:
            httpGet:
              path: /v1/health
              port: {{ .Values.ne_proxy.service.port }}
            initialDelaySeconds: 90
            periodSeconds: 5
            failureThreshold: 3
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /v1/health
              port: {{ .Values.ne_proxy.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
{{ toYaml .Values.ne_proxy.resources | indent 12 }}
      securityContext:
        sysctls:
        - name: net.core.somaxconn
          value: {{ .Values.ais_k8s.sysctls.somaxconn | quote }}
        - name: net.ipv4.ip_local_port_range
          value: "10240 65535"
      serviceAccount: {{ template "ais.name" . }}-sa
      nodeSelector:
         {{ .Values.ne_proxy.nodeSelector.key }}: {{ template "ais.fullname" . }}-nonelectable
      volumes:
        - name: config-mount
          configMap:
            name:  {{ template "ais.name" . }}-neproxy
        - name: env-mount
          hostPath:
            path: {{ .Values.ne_proxy.envMountPath.hostPath }}
        - name: etc-mount
          hostPath:
            path: {{ .Values.ne_proxy.etcMountPath.hostPath }}
        - name: statsd-config
          configMap:
            name: {{ template "ais.name" . }}-statsd
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      imagePullSecrets:
        {{- range .Values.image.pullSecretNames }}
        - name: {{ . }}
        {{- end }}