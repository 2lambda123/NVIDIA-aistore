#
# Dockerfile for standalone AIS container for GTC 2020 demo.
# Makes a directory /ais/disk1 in the container, so with no -v
# volumes nominated on the docker run commandline the start_ais.sh
# script will use the epemeral container root filesystem as a single
# AIS "disk".  If you need to pass -v options then one of them should
# use mountpoint /ais/disk1 to mask that behavior.
#
# This container automatically starts an AIS instance. Interaction
# and management with the instance is from a separate DL container.
#
# NOTE: Run docker build from the directory containing this Dockerfile,
# and the Dockerfile must not depend on any aspect of the ais repo
# outside of this directory - only this subtree will be required for
# DLI to build our container.
#

ARG AISBIN_IMAGE=gmaltby/ais-binaries:alpine-test
FROM $AISBIN_IMAGE AS aisbin
FROM golang:1.15-alpine

USER root
RUN apk upgrade --no-cache && \
    apk add --no-cache --virtual .build-deps \
    bash \
    git \
    python3 \
    sysstat \
    attr \
    make \
    util-linux \
    curl \
    wget \
    bash-completion \
    sudo \
    iproute2 \
  ;

RUN mkdir -p /etc/ais/proxy /etc/ais/target /ais/disk1
ENV GOBIN $GOPATH/bin
ENV PATH $PATH:$GOBIN

EXPOSE 51080
EXPOSE 51081

COPY entrypoint/start_ais.sh /start_ais.sh
COPY config/ais.json-proxy /etc/ais/proxy/ais.json
COPY config/ais.json-target /etc/ais/target/ais.json
COPY --from=aisbin /go/bin/aisnode $GOBIN/aisnode
COPY --from=aisbin /go/bin/ais /usr/bin/ais

EXPOSE 51080/tcp
EXPOSE 51081/tcp

ENTRYPOINT ["sh", "-c", "/start_ais.sh" ]
