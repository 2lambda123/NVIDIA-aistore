apiVersion: v1
kind: Pod
metadata:
  name: aistarget-${ID}
  labels:
    type: aistarget
spec:
  hostNetwork: true
  containers:
  - name: aistarget
    image: ${DOCKER_HOST_IP}:5000/ais:v1
    imagePullPolicy: Always
    securityContext:
      # Required for hostport to operate, or implement a full pod security policy
      privileged: true
    env:
     - name: AIS_NODE_ROLE
       value: "target"
     - name: AIS_NODE_NAME
       valueFrom:
         fieldRef:
           fieldPath: spec.nodeName
     - name: AIS_DAEMON_ID
       value: "ais-target-${ID}"
    volumeMounts:
     - name: aws-credentials
       mountPath: /root/.aws/
     - name: ais-fs
       mountPath: /usr/nvidia/data
     - name: ais-log
       mountPath: /tmp/
    ports:
      - containerPort: ${PORT}
        protocol: TCP
    command: ["bash","-c"]
    # TODO: fix the workarounf of AIS_FS_PATHS
    args:
      - export PORT=${PORT} &&
        export AIS_FS_PATHS="\"\"${AIS_FS_PATHS}\"\"" &&
        export AIS_PRIMARY_URL=${AIS_PRIMARY_URL} &&
        export IPV4LIST=${IPV4LIST} &&
        export TEST_FSPATH_COUNT=${TEST_FSPATH_COUNT} &&
        export AIS_CLD_PROVIDER=${AIS_CLD_PROVIDER} &&
        export AIS_CONF_FILE=/etc/ais/ais.json &&
        export STATSD_CONF_FILE="/etc/ais/statsd.conf" &&
        export COLLECTD_CONF_FILE="/etc/ais/collectd.conf" &&
        source /etc/ais/aisnode_config.sh &&
        aisnode -config=/etc/ais/ais.json -role=target -alsologtostderr=true;

  nodeSelector:
      nodename: ${TARGET_LABEL}
  volumes:
    - name: aws-credentials
      secret:
        secretName: aws-credentials
    - name: ais-fs
      hostPath:
        path: /tmp/ais-k8s
        type: Directory
    - name: ais-log
      hostPath:
        path: /tmp
        type: Directory
